% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kpca.R
\name{step_kpca}
\alias{step_kpca}
\title{Declare Which Variables Are Used for Kernel PCA Signal Extraction.}
\usage{
step_kpca(recipe, terms, role = "predictor", trained = FALSE, num = 5,
  object = NULL, options = list(kernel = "rbfdot", kpar = list(sigma =
  0.2)))
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the sequence of operations for this recipe.}

\item{terms}{A representation of the variables or terms that will be used to compute the components.}

\item{role}{For model terms created by this step, what analysis role should they be assigned?. By default, the function assumes that the new principal component columns created by the original variables will be used as predictors in a model.}

\item{trained}{A logical to indicate if the quantities for preprocessing have been estimated.}

\item{num}{The number of PCA components to retain as new predictors. If \code{num} is greater than the number of columns or the number of possible components, a smaller value will be used.}

\item{object}{An S4 \code{\link[kernlab]{kpca}} object is stored here once this preprocessing step has be trained by \code{\link{learn.kpca_step}}.}

\item{options}{A list of options to \code{\link[kernlab]{kpca}}. Defaults are set for the arguments \code{kernel} and \code{kpar} but others can be passed in. \bold{Note} that the arguments \code{x} and \code{features} should not be passed here (or at all).}
}
\value{
An object of class \code{kpca}.
}
\description{
This function is a \emph{specification} of a recipe step that will convert numeric data into one or more principal components using a kernel basis expansion.
}
\author{
Max Kuhn
}
\concept{
preprocessing pca projection_methods kernel_methods
}
\keyword{datagen}

