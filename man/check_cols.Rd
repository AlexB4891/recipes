% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/colcheck.R
\name{check_cols}
\alias{check_cols}
\alias{tidy.check_cols}
\title{Check if all Columns are Present}
\usage{
check_cols(recipe, ..., role = NA, trained = FALSE)

\method{tidy}{check_cols}(x, ...)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{...}{One or more selector functions to choose which
variables are checked in the step. See \code{\link[=selections]{selections()}}
for more details. For the \code{tidy} method, these are not
currently used.}

\item{role}{Not used by this step since no new variables are
created.}

\item{trained}{A logical to indicate if the column names to check
against are gathered.}

\item{x}{A \code{check_cols} object.}
}
\value{
An updated version of \code{recipe} with the new check
added to the sequence of existing operations (if any). For the
\code{tidy} method, a tibble with columns \code{terms} (the
selectors or variables selected).
}
\description{
\code{check_cols} creates a \emph{specification} of a recipe
step that will check if all the columns of the training frame are
present in the new data.
}
\details{
This check will break the \code{bake} function if any of the checked
columns does contain \code{NA} values. If the check passes, nothing is changed
to the data.
}
\examples{

data(biomass)

biomass_rec <- recipe(HHV ~ ., data = biomass) \%>\%
   step_rm(sample, dataset) \%>\%
   check_cols(contains("gen")) \%>\%
   step_center(all_predictors())
   
\dontrun{
bake(biomass_rec, biomass[, c("carbon", "HHV")])
}
}
