% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hyperbolic.R
\name{step_hyperbolic}
\alias{learn.step_hyperbolic}
\alias{process.step_hyperbolic}
\alias{step_hyperbolic}
\title{Hyperbolic Transformations}
\usage{
step_hyperbolic(recipe, terms, role = NA, trained = FALSE, func = "sin",
  inverse = TRUE)

\method{learn}{step_hyperbolic}(x, training, ...)

\method{process}{step_hyperbolic}(object, newdata, ...)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the sequence of operations for this recipe.}

\item{terms}{A representation of the variables or terms that will be centered.}

\item{role}{Not used by this step since no new variables are created.}

\item{trained}{A logical to indicate if the quantities for preprocessing have been estimated.}

\item{func}{A character value for the function. Valid values are "sin", "cos", or "tan".}

\item{inverse}{A logical: should the inverse function be used?}

\item{x}{a \code{step_hyperbolic} object that specifies which columns will be transformed}

\item{training}{A tibble or data frame that contains the training set.}

\item{...}{further arguments passed to or from other methods (not currently used).}

\item{object}{A trained step object.}

\item{newdata}{A tibble or data frame that has numeric variables that will be transformed}
}
\value{
\code{step_hyperbolic} and \code{learn.step_hyperbolic} return objects of class \code{step_hyperbolic}.

\code{process.step_hyperbolic} returns a tibble of processed data.
}
\description{
\code{step_hyperbolic} creates a \emph{specification} of a recipe step that will transform data using a hyperbolic function.

For a training set of data, \code{learn.step_hyperbolic} configures the hyperbolic transformation (by basically doing nothing).

\code{process.step_hyperbolic} is used to transform columns on specific data sets. This replaces values in the original columns.
}
\concept{
preprocessing transformation_methods
}
\keyword{datagen}

