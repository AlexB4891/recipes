% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/noNA.r
\name{check_noNA}
\alias{check_noNA}
\alias{tidy.check_noNA}
\title{Check no NA Values}
\usage{
check_noNA(recipe, ..., role = NA, trained = FALSE, means = NULL,
  na.rm = TRUE, columns = NULL)

\method{tidy}{check_noNA}(x, ...)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{...}{One or more selector functions to choose which
variables are checked in the step. See \code{\link[=selections]{selections()}}
for more details. For the \code{tidy} method, these are not
currently used.}

\item{role}{Not used by this step since no new variables are
created.}

\item{trained}{Irrelevant for this step since for this check it does not
matter if check is trained or not.}

\item{x}{A \code{check_noNA} object.}
}
\value{
An updated version of \code{recipe} with the new check
added to the sequence of existing steps (if any). For the
\code{tidy} method, a tibble with columns \code{terms} (the
selectors or variables selected).
}
\description{
\code{check_noNA} creates a a \emph{specification} of a recipe
step that will check if variables do not contain missing values.
}
\details{
This check will break the \code{bake} function if any of the checked
columns does contain \code{NA} values. If the check passes, nothing is changed
to the data.
}
\examples{
data(credit_data)
is.na(credit_data) \%>\% colSums()

# If the test passes, newdata is returned unaltered
recipe(credit_data) \%>\%
  check_noNA(Age, Expenses) \%>\%
  prep() \%>\%
  bake(credit_data)

# If your training set doesn't pass, prep() will break already
recipe(credit_data)  \%>\%
  check_noNA(Income) \%>\%
  prep()

# If newdata contain missing values, the check will break bake()
train_data <- credit_data \%>\% dplyr::filter(Income > 150)
test_data  <- credit_data \%>\% dplyr::filter(Income <= 150 | is.na(Income))
rp <- recipe(train_data) \%>\%
  check_noNA(Income) \%>\%
  prep()
bake(rp, train_data)
bake(rp, test_data)
}
